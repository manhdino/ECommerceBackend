components:
  schemas:
    User:  
     type: object
     properties:
      id:
        type: integer
        format: int64
        example: 1
      username:
        type: string
        maxLength: 30
        example: "dinomanh"
      fullname:
         type: string
         maxLength: 100
         example: "Nguyễn Viết Mạnh"
      role:
        type: string
        example: user
      email:
        type: string
        format: email
        maxLength: 30
        example: "manhnguyen123@gmail.com"
      phone:
        type: string
        example: "0866020143"
      address:
        type: string
        example: "134 Trương Định,Hai Bà Trưng, Hà Nội"
      created_at:
        type: string
        format: date-time
        example: "2024-05-06T12:00:00Z"
      updated_at:
        type: string
        format: date-time
        example: 2024-05-06T12:00:00Z"
    ErrorResponse:  
     type: object
     properties:
       success:
        type: string
        example: false
       status:
        type: integer
        example: 404
       message:
        type: string
        example: "Not found"  
    ValidateResponse:  
     type: object
     properties:
       success:
        type: string
        example: false
       status:
        type: integer
        example: 404
       message:
        type: string
        example: "Error Validate"  
    Category:  
     type: object
     properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        maxLength: 30
        example: "Adidas"
      created_at:
        type: string
        format: date-time
        example: "2024-05-06T12:00:00Z"
      updated_at:
        type: string
        format: date-time
        example: 2024-05-06T12:00:00Z"
  # securitySchemes:
  #   BearerAuth:
  #     type: http
  #     scheme: bearer
  #     bearerFormat: JWT